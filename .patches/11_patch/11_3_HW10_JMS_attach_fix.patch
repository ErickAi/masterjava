Index: services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/util/MailUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/util/MailUtils.java	(date 1514204990000)
+++ services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/util/MailUtils.java	(date 1514205214646)
@@ -6,7 +6,6 @@
 import com.sun.istack.NotNull;
 import lombok.AllArgsConstructor;
 import lombok.Data;
-import org.apache.commons.io.IOUtils;
 import org.apache.commons.io.input.CloseShieldInputStream;
 import ru.javaops.masterjava.service.mail.Addressee;
 import ru.javaops.masterjava.service.mail.Attachment;
@@ -14,7 +13,10 @@
 import javax.activation.DataHandler;
 import javax.activation.DataSource;
 import java.io.*;
+import java.util.AbstractMap.SimpleImmutableEntry;
+import java.util.List;
 import java.util.Set;
+import java.util.stream.Collectors;
 
 public class MailUtils {
 
@@ -29,16 +31,12 @@
         private @NotNull String users;
         private String subject;
         private @NotNull String body;
-        private String attachName;
-        private byte[] attachData;
+        //  http://stackoverflow.com/questions/521171/a-java-collection-of-value-pairs-tuples
+        private List<SimpleImmutableEntry<String, byte[]>> attachments;
     }
 
-    public static MailObject getMailObject(String users, String subject, String body, String name, InputStream is) {
-        try {
-            return new MailObject(users, subject, body, name, is == null ? null : IOUtils.toByteArray(is));
-        } catch (IOException e) {
-            throw new IllegalStateException(e);
-        }
+    public static List<Attachment> getAttachments(List<SimpleImmutableEntry<String, byte[]>> attachments) {
+        return attachments.stream().map(a -> getAttachment(a.getKey(), a.getValue())).collect(Collectors.toList());
     }
 
     public static Attachment getAttachment(String name, byte[] attachData) {
Index: services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailServiceExecutor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailServiceExecutor.java	(date 1514204990000)
+++ services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailServiceExecutor.java	(date 1514205001802)
@@ -1,6 +1,5 @@
 package ru.javaops.masterjava.service.mail;
 
-import com.google.common.collect.ImmutableList;
 import lombok.extern.slf4j.Slf4j;
 import one.util.streamex.StreamEx;
 import ru.javaops.masterjava.ExceptionType;
@@ -79,7 +78,7 @@
                 mailExecutor.submit(() -> {
                     try {
                         MailSender.sendTo(addressee, mailObject.getSubject(), mailObject.getBody(),
-                                ImmutableList.of(MailUtils.getAttachment(mailObject.getAttachName(), mailObject.getAttachData())));
+                                MailUtils.getAttachments(mailObject.getAttachments()));
                     } catch (WebStateException e) {
                         // already logged
                     }
Index: web/webapp/src/main/java/ru/javaops/masterjava/webapp/JmsSendServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/webapp/src/main/java/ru/javaops/masterjava/webapp/JmsSendServlet.java	(date 1514204990000)
+++ web/webapp/src/main/java/ru/javaops/masterjava/webapp/JmsSendServlet.java	(date 1514205214556)
@@ -1,7 +1,8 @@
 package ru.javaops.masterjava.webapp;
 
+import com.google.common.collect.ImmutableList;
 import lombok.extern.slf4j.Slf4j;
-import ru.javaops.masterjava.service.mail.util.MailUtils;
+import org.apache.commons.io.IOUtils;
 import ru.javaops.masterjava.service.mail.util.MailUtils.MailObject;
 
 import javax.jms.*;
@@ -16,6 +17,7 @@
 import javax.servlet.http.Part;
 import java.io.IOException;
 import java.lang.IllegalStateException;
+import java.util.AbstractMap.SimpleImmutableEntry;
 
 @WebServlet("/sendJms")
 @Slf4j
@@ -59,13 +61,11 @@
             resp.setCharacterEncoding("UTF-8");
             Part filePart = req.getPart("attach");
 
-            MailObject mailObject = MailUtils.getMailObject(
-                    req.getParameter("users"),
-                    req.getParameter("subject"),
-                    req.getParameter("body"),
-                    filePart == null ? null : filePart.getSubmittedFileName(),
-                    filePart == null ? null : filePart.getInputStream());
-
+            MailObject mailObject = new MailObject(req.getParameter("users"), req.getParameter("subject"), req.getParameter("body"),
+                    filePart == null ?
+                            ImmutableList.of() :
+                            ImmutableList.of(new SimpleImmutableEntry<>(filePart.getSubmittedFileName(), IOUtils.toByteArray(filePart.getInputStream())))
+            );
             result = sendJms(mailObject);
             log.info("Processing finished with result: {}", result);
         } catch (Exception e) {
