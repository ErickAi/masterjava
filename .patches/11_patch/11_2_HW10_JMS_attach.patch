Index: services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/util/MailUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/util/MailUtils.java	(date 1514200286774)
+++ services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/util/MailUtils.java	(date 1514200286774)
@@ -0,0 +1,70 @@
+package ru.javaops.masterjava.service.mail.util;
+
+import com.google.common.base.Splitter;
+import com.google.common.collect.ImmutableSet;
+import com.google.common.collect.Iterables;
+import com.sun.istack.NotNull;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import org.apache.commons.io.IOUtils;
+import org.apache.commons.io.input.CloseShieldInputStream;
+import ru.javaops.masterjava.service.mail.Addressee;
+import ru.javaops.masterjava.service.mail.Attachment;
+
+import javax.activation.DataHandler;
+import javax.activation.DataSource;
+import java.io.*;
+import java.util.Set;
+
+public class MailUtils {
+
+    public static Set<Addressee> split(String addressees) {
+        Iterable<String> split = Splitter.on(',').trimResults().omitEmptyStrings().split(addressees);
+        return ImmutableSet.copyOf(Iterables.transform(split, Addressee::new));
+    }
+
+    @Data
+    @AllArgsConstructor
+    public static class MailObject implements Serializable {
+        private @NotNull String users;
+        private String subject;
+        private @NotNull String body;
+        private String attachName;
+        private byte[] attachData;
+    }
+
+    public static MailObject getMailObject(String users, String subject, String body, String name, InputStream is) {
+        try {
+            return new MailObject(users, subject, body, name, is == null ? null : IOUtils.toByteArray(is));
+        } catch (IOException e) {
+            throw new IllegalStateException(e);
+        }
+    }
+
+    public static Attachment getAttachment(String name, byte[] attachData) {
+        return new Attachment(name, new DataHandler((ProxyDataSource) () -> new ByteArrayInputStream(attachData)));
+    }
+
+    public static Attachment getAttachment(String name, InputStream inputStream) {
+        //    http://stackoverflow.com/questions/2830561/how-to-convert-an-inputstream-to-a-datahandler
+        //    http://stackoverflow.com/a/5924019/548473
+        return new Attachment(name, new DataHandler((ProxyDataSource) () -> new CloseShieldInputStream(inputStream)));
+    }
+
+    public interface ProxyDataSource extends DataSource {
+        @Override
+        default OutputStream getOutputStream() throws IOException {
+            throw new UnsupportedOperationException("Not implemented");
+        }
+
+        @Override
+        default String getContentType() {
+            return "application/octet-stream";
+        }
+
+        @Override
+        default String getName() {
+            return "";
+        }
+    }
+}
Index: services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/util/Attachments.java
===================================================================
--- services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/util/Attachments.java	(date 1514162778000)
+++ services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/util/Attachments.java	(date 1514162778000)
@@ -1,47 +0,0 @@
-package ru.javaops.masterjava.service.mail.util;
-
-import lombok.AllArgsConstructor;
-import org.apache.commons.io.input.CloseShieldInputStream;
-import ru.javaops.masterjava.service.mail.Attachment;
-
-import javax.activation.DataHandler;
-import javax.activation.DataSource;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.OutputStream;
-
-public class Attachments {
-    public static Attachment getAttachment(String name, InputStream inputStream) {
-        return new Attachment(name, new DataHandler(new InputStreamDataSource(inputStream)));
-    }
-
-    //    http://stackoverflow.com/questions/2830561/how-to-convert-an-inputstream-to-a-datahandler
-    //    http://stackoverflow.com/a/10783565/548473
-    @AllArgsConstructor
-    private static class InputStreamDataSource implements ProxyDataSource {
-        private InputStream inputStream;
-
-        @Override
-        public InputStream getInputStream() throws IOException {
-            return new CloseShieldInputStream(inputStream);
-        }
-    }
-
-    public interface ProxyDataSource extends DataSource {
-
-        @Override
-        default OutputStream getOutputStream() throws IOException {
-            throw new UnsupportedOperationException("Not implemented");
-        }
-
-        @Override
-        default String getContentType() {
-            return "application/octet-stream";
-        }
-
-        @Override
-        default String getName() {
-            return "";
-        }
-    }
-}
Index: services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/MailWSClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/MailWSClient.java	(date 1514162778000)
+++ services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/MailWSClient.java	(date 1514199797786)
@@ -1,8 +1,5 @@
 package ru.javaops.masterjava.service.mail;
 
-import com.google.common.base.Splitter;
-import com.google.common.collect.ImmutableSet;
-import com.google.common.collect.Iterables;
 import com.google.common.io.Resources;
 import lombok.extern.slf4j.Slf4j;
 import ru.javaops.masterjava.web.WebStateException;
@@ -44,11 +41,6 @@
         return WS_CLIENT.getPort(new MTOMFeature(1024));
     }
 
-    public static Set<Addressee> split(String addressees) {
-        Iterable<String> split = Splitter.on(',').trimResults().omitEmptyStrings().split(addressees);
-        return ImmutableSet.copyOf(Iterables.transform(split, Addressee::new));
-    }
-
     public static WsClient.HostConfig getHostConfig() {
         return WS_CLIENT.getHostConfig();
     }
Index: services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/listeners/JmsMailListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/listeners/JmsMailListener.java	(date 1514162778000)
+++ services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/listeners/JmsMailListener.java	(date 1514200286716)
@@ -1,6 +1,9 @@
 package ru.javaops.masterjava.service.mail.listeners;
 
 import lombok.extern.slf4j.Slf4j;
+import org.apache.activemq.ActiveMQConnectionFactory;
+import ru.javaops.masterjava.service.mail.MailServiceExecutor;
+import ru.javaops.masterjava.service.mail.util.MailUtils;
 
 import javax.jms.*;
 import javax.naming.InitialContext;
@@ -18,8 +21,9 @@
     public void contextInitialized(ServletContextEvent sce) {
         try {
             InitialContext initCtx = new InitialContext();
-            QueueConnectionFactory connectionFactory =
-                    (QueueConnectionFactory) initCtx.lookup("java:comp/env/jms/ConnectionFactory");
+            ActiveMQConnectionFactory connectionFactory =
+                    (ActiveMQConnectionFactory) initCtx.lookup("java:comp/env/jms/ConnectionFactory");
+            connectionFactory.setTrustAllPackages(true);
             connection = connectionFactory.createQueueConnection();
             QueueSession queueSession = connection.createQueueSession(false, Session.AUTO_ACKNOWLEDGE);
             Queue queue = (Queue) initCtx.lookup("java:comp/env/jms/queue/MailQueue");
@@ -30,11 +34,11 @@
                 try {
                     while (!Thread.interrupted()) {
                         Message m = receiver.receive();
-                        // TODO implement mail sending
-                        if (m instanceof TextMessage) {
-                            TextMessage tm = (TextMessage) m;
-                            String text = tm.getText();
-                            log.info("Received TextMessage with text '{}'", text);
+                        if (m instanceof ObjectMessage) {
+                            ObjectMessage om = (ObjectMessage) m;
+                            MailUtils.MailObject mailObject = (MailUtils.MailObject) om.getObject();
+                            log.info("Received MailObject {}", mailObject);
+                            MailServiceExecutor.sendAsync(mailObject);
                         }
                     }
                 } catch (Exception e) {
Index: services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/rest/MailRS.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/rest/MailRS.java	(date 1514162778000)
+++ services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/rest/MailRS.java	(date 1514200286673)
@@ -9,8 +9,7 @@
 import ru.javaops.masterjava.service.mail.Attachment;
 import ru.javaops.masterjava.service.mail.GroupResult;
 import ru.javaops.masterjava.service.mail.MailServiceExecutor;
-import ru.javaops.masterjava.service.mail.MailWSClient;
-import ru.javaops.masterjava.service.mail.util.Attachments;
+import ru.javaops.masterjava.service.mail.util.MailUtils;
 import ru.javaops.masterjava.web.WebStateException;
 
 import javax.activation.DataHandler;
@@ -47,11 +46,11 @@
                 String utf8name = new String(attachName.getBytes("ISO8859_1"), "UTF-8");
                 BodyPartEntity bodyPartEntity = ((BodyPartEntity) attachBodyPart.getEntity());
 
-                attachments = ImmutableList.of(new Attachment(utf8name, new DataHandler((Attachments.ProxyDataSource) bodyPartEntity::getInputStream)));
+                attachments = ImmutableList.of(new Attachment(utf8name, new DataHandler((MailUtils.ProxyDataSource) bodyPartEntity::getInputStream)));
             } catch (UnsupportedEncodingException e) {
                 throw new IllegalStateException(e);
             }
         }
-        return MailServiceExecutor.sendBulk(MailWSClient.split(users), subject, body, attachments);
+        return MailServiceExecutor.sendBulk(MailUtils.split(users), subject, body, attachments);
     }
 }
\ No newline at end of file
Index: services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailServiceExecutor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailServiceExecutor.java	(date 1514162778000)
+++ services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailServiceExecutor.java	(date 1514200286570)
@@ -1,8 +1,11 @@
 package ru.javaops.masterjava.service.mail;
 
+import com.google.common.collect.ImmutableList;
 import lombok.extern.slf4j.Slf4j;
 import one.util.streamex.StreamEx;
 import ru.javaops.masterjava.ExceptionType;
+import ru.javaops.masterjava.service.mail.util.MailUtils;
+import ru.javaops.masterjava.service.mail.util.MailUtils.MailObject;
 import ru.javaops.masterjava.web.WebStateException;
 import ru.javaops.masterjava.web.WsClient;
 
@@ -69,4 +72,18 @@
             }
         }.call();
     }
+
+    public static void sendAsync(MailObject mailObject) {
+        Set<Addressee> addressees = MailUtils.split(mailObject.getUsers());
+        addressees.forEach(addressee ->
+                mailExecutor.submit(() -> {
+                    try {
+                        MailSender.sendTo(addressee, mailObject.getSubject(), mailObject.getBody(),
+                                ImmutableList.of(MailUtils.getAttachment(mailObject.getAttachName(), mailObject.getAttachData())));
+                    } catch (WebStateException e) {
+                        // already logged
+                    }
+                })
+        );
+    }
 }
\ No newline at end of file
Index: web/webapp/src/main/java/ru/javaops/masterjava/webapp/JmsSendServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/webapp/src/main/java/ru/javaops/masterjava/webapp/JmsSendServlet.java	(date 1514162778000)
+++ web/webapp/src/main/java/ru/javaops/masterjava/webapp/JmsSendServlet.java	(date 1514200734287)
@@ -1,20 +1,25 @@
 package ru.javaops.masterjava.webapp;
 
 import lombok.extern.slf4j.Slf4j;
+import ru.javaops.masterjava.service.mail.util.MailUtils;
+import ru.javaops.masterjava.service.mail.util.MailUtils.MailObject;
 
 import javax.jms.*;
 import javax.naming.InitialContext;
 import javax.servlet.ServletConfig;
 import javax.servlet.ServletException;
+import javax.servlet.annotation.MultipartConfig;
 import javax.servlet.annotation.WebServlet;
 import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
+import javax.servlet.http.Part;
 import java.io.IOException;
 import java.lang.IllegalStateException;
 
 @WebServlet("/sendJms")
 @Slf4j
+@MultipartConfig
 public class JmsSendServlet extends HttpServlet {
     private Connection connection;
     private Session session;
@@ -46,16 +51,22 @@
     }
 
     @Override
-    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
+    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {
         String result;
         try {
             log.info("Start sending");
             req.setCharacterEncoding("UTF-8");
             resp.setCharacterEncoding("UTF-8");
-            String users = req.getParameter("users");
-            String subject = req.getParameter("subject");
-            String body = req.getParameter("body");
-            result = sendJms(users, subject, body);
+            Part filePart = req.getPart("attach");
+
+            MailObject mailObject = MailUtils.getMailObject(
+                    req.getParameter("users"),
+                    req.getParameter("subject"),
+                    req.getParameter("body"),
+                    filePart == null ? null : filePart.getSubmittedFileName(),
+                    filePart == null ? null : filePart.getInputStream());
+
+            result = sendJms(mailObject);
             log.info("Processing finished with result: {}", result);
         } catch (Exception e) {
             log.error("Processing failed", e);
@@ -64,10 +75,10 @@
         resp.getWriter().write(result);
     }
 
-    private synchronized String sendJms(String users, String subject, String body) throws JMSException {
-        TextMessage testMessage = session.createTextMessage();
-        testMessage.setText(subject);
-        producer.send(testMessage);
+    private synchronized String sendJms(MailObject mailObject) throws JMSException {
+        ObjectMessage om = session.createObjectMessage();
+        om.setObject(mailObject);
+        producer.send(om);
         return "Successfully sent JMS message";
     }
 }
\ No newline at end of file
Index: web/webapp/src/main/java/ru/javaops/masterjava/webapp/SoapSendServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/webapp/src/main/java/ru/javaops/masterjava/webapp/SoapSendServlet.java	(date 1514162778000)
+++ web/webapp/src/main/java/ru/javaops/masterjava/webapp/SoapSendServlet.java	(date 1514202768154)
@@ -4,9 +4,8 @@
 import lombok.extern.slf4j.Slf4j;
 import ru.javaops.masterjava.service.mail.GroupResult;
 import ru.javaops.masterjava.service.mail.MailWSClient;
-import ru.javaops.masterjava.service.mail.util.Attachments;
+import ru.javaops.masterjava.service.mail.util.MailUtils;
 
-import javax.servlet.ServletException;
 import javax.servlet.annotation.MultipartConfig;
 import javax.servlet.annotation.WebServlet;
 import javax.servlet.http.HttpServlet;
@@ -20,7 +19,7 @@
 @MultipartConfig
 public class SoapSendServlet extends HttpServlet {
     @Override
-    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
+    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {
         String result;
         try {
             log.info("Start sending");
@@ -30,9 +29,9 @@
             String subject = req.getParameter("subject");
             String body = req.getParameter("body");
             Part filePart = req.getPart("attach");
-            GroupResult groupResult = MailWSClient.sendBulk(MailWSClient.split(users), subject, body,
+            GroupResult groupResult = MailWSClient.sendBulk(MailUtils.split(users), subject, body,
                     filePart == null ? null :
-                            ImmutableList.of(Attachments.getAttachment(filePart.getSubmittedFileName(), filePart.getInputStream())));
+                            ImmutableList.of(MailUtils.getAttachment(filePart.getSubmittedFileName(), filePart.getInputStream())));
             result = groupResult.toString();
             log.info("Processing finished with result: {}", result);
         } catch (Exception e) {
Index: web/webapp/src/main/webapp/WEB-INF/templates/users.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/webapp/src/main/webapp/WEB-INF/templates/users.html	(date 1514162778000)
+++ web/webapp/src/main/webapp/WEB-INF/templates/users.html	(date 1514201096929)
@@ -43,9 +43,9 @@
         <input id="attach" type="file">
     </p>
     <p>
-        <input type="radio" name="transport" onchange="setTransport('SOAP');" checked>SOAP<br>
-        <input type="radio" name="transport" onchange="setTransport('REST');">REST<br>
-        <input type="radio" name="transport" onchange="setTransport('JMS');">JMS<br>
+        <input type="radio" name="transport" onchange="setUrl('sendSoap');" checked>SOAP<br>
+        <input type="radio" name="transport" onchange="setUrl('/mail/rest/send');">REST<br>
+        <input type="radio" name="transport" onchange="setUrl('sendJms');">JMS<br>
     </p>
     <p>
         <button type="button" onclick="send()">Send</button>
@@ -53,10 +53,10 @@
     <pre id="result"></pre>
 </section>
 <script type="text/javascript">
-    var transport = "SOAP"; //default
+    var url = "sendSoap"; //default
 
-    function setTransport(value) {
-        transport = value;
+    function setUrl(value) {
+        url = value;
     }
 
     function send() {
@@ -70,31 +70,21 @@
             return;
         }
 
-        var param;
-        if (transport === "SOAP" || transport === "REST") {
-            // https://stackoverflow.com/a/5976031/548473
-            var data = new FormData();
-            data.append('users', users);
-            data.append('subject', $("#subject").val());
-            data.append('body', $("#body").val());
-            var attach = $('#attach')[0].files[0];
-            if (attach) data.append('attach', attach);
-            param = {
-                url: (transport === "REST" ? "/mail/rest/send" : "sendSoap"),
-                data: data,
-                contentType: false,
-                processData: false
-            };
-        } else if (transport === "JMS") {
-            param = {
-                url: "sendJms",
-                data: "users=" + users + "&subject=" + $("#subject").val() + "&body=" + $("#body").val(),
-                contentType: "application/x-www-form-urlencoded"
-            };
-        }
-
-//        https://stackoverflow.com/a/22213543/548473
-        $.post(param).done(function (result) {
+        // https://stackoverflow.com/a/5976031/548473
+        var data = new FormData();
+        data.append('users', users);
+        data.append('subject', $("#subject").val());
+        data.append('body', $("#body").val());
+        var attach = $('#attach')[0].files[0];
+        if (attach) data.append('attach', attach);
+
+//        https://stackoverflow.com/a/22213543/548473
+        $.post({
+            url: url,
+            data: data,
+            contentType: false,
+            processData: false
+        }).done(function (result) {
             if (typeof result === "object") {
                 result = JSON.stringify(result)
             }
