Index: services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/MailRemoteService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/MailRemoteService.java	(date 1514244706318)
+++ services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/MailRemoteService.java	(date 1514244706318)
@@ -0,0 +1,8 @@
+package ru.javaops.masterjava.service.mail;
+
+import ru.javaops.masterjava.service.mail.util.MailUtils;
+
+public interface MailRemoteService {
+
+    scala.concurrent.Future<GroupResult> sendBulk(MailUtils.MailObject mailObject);
+}
\ No newline at end of file
Index: services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/listeners/AkkaMailListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/listeners/AkkaMailListener.java	(date 1514250556833)
+++ services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/listeners/AkkaMailListener.java	(date 1514250556833)
@@ -0,0 +1,30 @@
+package ru.javaops.masterjava.service.mail.listeners;
+
+import akka.japi.Creator;
+import lombok.extern.slf4j.Slf4j;
+import ru.javaops.masterjava.akka.AkkaActivator;
+import ru.javaops.masterjava.service.mail.MailRemoteService;
+import ru.javaops.masterjava.service.mail.MailServiceExecutor;
+
+import javax.servlet.ServletContextEvent;
+import javax.servlet.ServletContextListener;
+import javax.servlet.annotation.WebListener;
+
+@WebListener
+@Slf4j
+public class AkkaMailListener implements ServletContextListener {
+    private AkkaActivator akkaActivator;
+
+    @Override
+    public void contextInitialized(ServletContextEvent sce) {
+        akkaActivator = AkkaActivator.start("MailService", "mail-service");
+        akkaActivator.startTypedActor(MailRemoteService.class, "mail-remote-service",
+                (Creator<MailRemoteService>) () ->
+                        mailObject -> MailServiceExecutor.sendAsyncWithReply(mailObject, akkaActivator.getExecutionContext()));
+    }
+
+    @Override
+    public void contextDestroyed(ServletContextEvent sce) {
+        akkaActivator.shutdown();
+    }
+}
\ No newline at end of file
Index: web/webapp/src/main/java/ru/javaops/masterjava/webapp/akka/AkkaTypedSendServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/webapp/src/main/java/ru/javaops/masterjava/webapp/akka/AkkaTypedSendServlet.java	(date 1514250535828)
+++ web/webapp/src/main/java/ru/javaops/masterjava/webapp/akka/AkkaTypedSendServlet.java	(date 1514250535828)
@@ -0,0 +1,48 @@
+package ru.javaops.masterjava.webapp.akka;
+
+import lombok.extern.slf4j.Slf4j;
+import ru.javaops.masterjava.service.mail.GroupResult;
+import ru.javaops.masterjava.service.mail.MailRemoteService;
+import ru.javaops.masterjava.service.mail.util.MailUtils.MailObject;
+import scala.concurrent.Await;
+import scala.concurrent.duration.Duration;
+
+import javax.servlet.ServletConfig;
+import javax.servlet.ServletException;
+import javax.servlet.annotation.MultipartConfig;
+import javax.servlet.annotation.WebServlet;
+import javax.servlet.http.HttpServlet;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.IOException;
+
+import static ru.javaops.masterjava.webapp.WebUtil.createMailObject;
+import static ru.javaops.masterjava.webapp.WebUtil.doAndWriteResponse;
+import static ru.javaops.masterjava.webapp.akka.AkkaWebappListener.akkaActivator;
+
+@WebServlet(value = "/sendAkkaTyped", loadOnStartup = 1, asyncSupported = true)
+@Slf4j
+@MultipartConfig
+public class AkkaTypedSendServlet extends HttpServlet {
+
+    private MailRemoteService mailService;
+
+    @Override
+    public void init(ServletConfig config) throws ServletException {
+        super.init(config);
+        mailService = akkaActivator.getTypedRef(MailRemoteService.class, "akka.tcp://MailService@127.0.0.1:2553/user/mail-remote-service");
+    }
+
+    @Override
+    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {
+        req.setCharacterEncoding("UTF-8");
+        doAndWriteResponse(resp, () -> sendAkka(createMailObject(req)));
+    }
+
+    private String sendAkka(MailObject mailObject) throws Exception {
+        scala.concurrent.Future<GroupResult> future = mailService.sendBulk(mailObject);
+        log.info("Receive future, waiting result ...");
+        GroupResult groupResult = Await.result(future, Duration.create(10, "seconds"));
+        return groupResult.toString();
+    }
+}
\ No newline at end of file
Index: web/webapp/src/main/java/ru/javaops/masterjava/webapp/akka/AkkaWebappListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/webapp/src/main/java/ru/javaops/masterjava/webapp/akka/AkkaWebappListener.java	(date 1514244706625)
+++ web/webapp/src/main/java/ru/javaops/masterjava/webapp/akka/AkkaWebappListener.java	(date 1514244706625)
@@ -0,0 +1,24 @@
+package ru.javaops.masterjava.webapp.akka;
+
+import lombok.extern.slf4j.Slf4j;
+import ru.javaops.masterjava.akka.AkkaActivator;
+
+import javax.servlet.ServletContextEvent;
+import javax.servlet.ServletContextListener;
+import javax.servlet.annotation.WebListener;
+
+@WebListener
+@Slf4j
+public class AkkaWebappListener implements ServletContextListener {
+    public static AkkaActivator akkaActivator;
+
+    @Override
+    public void contextInitialized(ServletContextEvent sce) {
+        akkaActivator = AkkaActivator.start("WebApp", "webapp");
+    }
+
+    @Override
+    public void contextDestroyed(ServletContextEvent sce) {
+        akkaActivator.shutdown();
+    }
+}
\ No newline at end of file
Index: services/akka-remote/src/main/java/ru/javaops/masterjava/akka/AkkaActivator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/akka-remote/src/main/java/ru/javaops/masterjava/akka/AkkaActivator.java	(date 1514244692000)
+++ services/akka-remote/src/main/java/ru/javaops/masterjava/akka/AkkaActivator.java	(date 1514250556832)
@@ -1,8 +1,16 @@
 package ru.javaops.masterjava.akka;
 
 import akka.actor.ActorSystem;
+import akka.actor.TypedActor;
+import akka.actor.TypedProps;
+import akka.japi.Creator;
+import akka.util.Timeout;
 import lombok.extern.slf4j.Slf4j;
 import ru.javaops.masterjava.config.Configs;
+import scala.concurrent.ExecutionContext;
+import scala.concurrent.duration.Duration;
+
+import java.util.concurrent.TimeUnit;
 
 @Slf4j
 public class AkkaActivator {
@@ -19,6 +27,21 @@
         return new AkkaActivator(actorSystemName, configName);
     }
 
+    public <T> void startTypedActor(Class<T> typedClass, String name, Creator<T> creator) {
+        log.info("Start AKKA typed actor: {}", name);
+        TypedActor.get(system).typedActorOf(
+                new TypedProps<T>(typedClass, creator).withTimeout(new Timeout(Duration.create(20, TimeUnit.SECONDS))), name);
+    }
+
+    public <T> T getTypedRef(Class<T> typedClass, String path) {
+        log.info("Get typed reference with path={}", path);
+        return TypedActor.get(system).typedActorOf(new TypedProps<T>(typedClass), system.actorFor(path));
+    }
+
+    public ExecutionContext getExecutionContext() {
+        return system.dispatcher();
+    }
+
     public void shutdown() {
         if (system != null) {
             log.info("Akka system shutdown");
Index: services/common-ws/src/main/java/ru/javaops/masterjava/web/FaultInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/common-ws/src/main/java/ru/javaops/masterjava/web/FaultInfo.java	(date 1514244692000)
+++ services/common-ws/src/main/java/ru/javaops/masterjava/web/FaultInfo.java	(date 1514250604185)
@@ -7,12 +7,15 @@
 import ru.javaops.masterjava.ExceptionType;
 
 import javax.xml.bind.annotation.XmlType;
+import java.io.Serializable;
 
 @Data
 @RequiredArgsConstructor
 @NoArgsConstructor
 @XmlType(namespace = "http://common.javaops.ru/")
-public class FaultInfo {
+public class FaultInfo implements Serializable {
+    private static final long serialVersionUID = 1L;
+
     private @NonNull ExceptionType type;
 
     @Override
Index: services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/util/MailUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/util/MailUtils.java	(date 1514244692000)
+++ services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/util/MailUtils.java	(date 1514244706239)
@@ -28,6 +28,8 @@
     @Data
     @AllArgsConstructor
     public static class MailObject implements Serializable {
+        private static final long serialVersionUID = 1L;
+
         private @NotNull String users;
         private String subject;
         private @NotNull String body;
Index: services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/GroupResult.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/GroupResult.java	(date 1514244692000)
+++ services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/GroupResult.java	(date 1514244706275)
@@ -6,13 +6,16 @@
 
 import javax.xml.bind.annotation.XmlAccessType;
 import javax.xml.bind.annotation.XmlAccessorType;
+import java.io.Serializable;
 import java.util.List;
 
 @AllArgsConstructor
 @NoArgsConstructor
 @XmlAccessorType(XmlAccessType.FIELD)
 @Getter
-public class GroupResult {
+public class GroupResult implements Serializable {
+    private static final long serialVersionUID = 1L;
+
     private int success; // number of successfully sent email
     private List<MailResult> failed; // failed emails with causes
 
Index: services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/MailResult.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/MailResult.java	(date 1514244692000)
+++ services/mail-api/src/main/java/ru/javaops/masterjava/service/mail/MailResult.java	(date 1514244706363)
@@ -9,12 +9,15 @@
 import javax.xml.bind.annotation.XmlAccessorType;
 import javax.xml.bind.annotation.XmlAttribute;
 import javax.xml.bind.annotation.XmlValue;
+import java.io.Serializable;
 
 @AllArgsConstructor
 @NoArgsConstructor
 @XmlAccessorType(XmlAccessType.FIELD)
 @Getter
-public class MailResult {
+public class MailResult implements Serializable {
+    private static final long serialVersionUID = 1L;
+
     public static final String OK = "OK";
 
     @XmlAttribute
Index: services/mail-api/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-api/pom.xml	(date 1514244692000)
+++ services/mail-api/pom.xml	(date 1514244706393)
@@ -38,6 +38,11 @@
             <artifactId>commons-io</artifactId>
             <version>2.6</version>
         </dependency>
+        <dependency>
+            <groupId>${project.groupId}</groupId>
+            <artifactId>akka-remote</artifactId>
+            <version>${project.version}</version>
+        </dependency>
     </dependencies>
 
 </project>
\ No newline at end of file
Index: services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailServiceExecutor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailServiceExecutor.java	(date 1514244692000)
+++ services/mail-service/src/main/java/ru/javaops/masterjava/service/mail/MailServiceExecutor.java	(date 1514250556833)
@@ -1,5 +1,6 @@
 package ru.javaops.masterjava.service.mail;
 
+import akka.dispatch.Futures;
 import lombok.extern.slf4j.Slf4j;
 import one.util.streamex.StreamEx;
 import ru.javaops.masterjava.ExceptionType;
@@ -7,6 +8,7 @@
 import ru.javaops.masterjava.service.mail.util.MailUtils.MailObject;
 import ru.javaops.masterjava.web.WebStateException;
 import ru.javaops.masterjava.web.WsClient;
+import scala.concurrent.ExecutionContext;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -72,6 +74,13 @@
         }.call();
     }
 
+    public static scala.concurrent.Future<GroupResult> sendAsyncWithReply(MailObject mailObject, ExecutionContext ec) {
+        // http://doc.akka.io/docs/akka/current/java/futures.html
+        return Futures.future(
+                () -> sendBulk(MailUtils.split(mailObject.getUsers()), mailObject.getSubject(), mailObject.getBody(), MailUtils.getAttachments(mailObject.getAttachments())),
+                ec);
+    }
+
     public static void sendAsync(MailObject mailObject) {
         Set<Addressee> addressees = MailUtils.split(mailObject.getUsers());
         addressees.forEach(addressee ->
Index: services/mail-service/src/main/resources/logback.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- services/mail-service/src/main/resources/logback.xml	(date 1514244692000)
+++ services/mail-service/src/main/resources/logback.xml	(date 1514246922567)
@@ -39,7 +39,7 @@
     <logger name="org.hibernate.validator" level="debug"/>
     <logger name="org.glassfish.jersey" level="trace"/>
 
-    <root level="warn">
+    <root level="info">
         <appender-ref ref="file"/>
         <appender-ref ref="console"/>
     </root>
Index: web/webapp/src/main/webapp/WEB-INF/templates/users.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/webapp/src/main/webapp/WEB-INF/templates/users.html	(date 1514244692000)
+++ web/webapp/src/main/webapp/WEB-INF/templates/users.html	(date 1514250556834)
@@ -46,6 +46,7 @@
         <input type="radio" name="transport" onchange="setUrl('sendSoap');" checked>SOAP<br>
         <input type="radio" name="transport" onchange="setUrl('/mail/rest/send');">REST<br>
         <input type="radio" name="transport" onchange="setUrl('sendJms');">JMS<br>
+        <input type="radio" name="transport" onchange="setUrl('sendAkkaTyped');">AKKA Typed<br>
     </p>
     <p>
         <button type="button" onclick="send()">Send</button>
